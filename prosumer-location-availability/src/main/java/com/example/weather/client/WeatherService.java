
package com.example.weather.client;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WeatherService", targetNamespace = "http://services.provider_weather.spring.rest/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WeatherService {


    /**
     * 
     * @param date
     * @param location
     * @return
     *     returns com.example.weather.client.Weather
     * @throws ImpossibleToPredictWeatherException_Exception
     * @throws LocationNotFoundException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getWeatherForecast", targetNamespace = "http://services.provider_weather.spring.rest/", className = "com.example.weather.client.GetWeatherForecast")
    @ResponseWrapper(localName = "getWeatherForecastResponse", targetNamespace = "http://services.provider_weather.spring.rest/", className = "com.example.weather.client.GetWeatherForecastResponse")
    public Weather getWeatherForecast(
        @WebParam(name = "location", targetNamespace = "")
        String location,
        @WebParam(name = "date", targetNamespace = "")
        XMLGregorianCalendar date)
        throws ImpossibleToPredictWeatherException_Exception, LocationNotFoundException_Exception
    ;

}
